basic shell commands
launch the MongoDB shell with mongo

commands:
cls
show dbs
use config
db
show collections
help
exit

 more commands:
use sitedata
db.notes.insertOne({message: 'nnn'})
db.notes.find()
show collections
db.dropDatabase()

Aufgabe:
mongo

ctrg l---clear terminal

show dbs
use local
show collections
db.startup_log.find()
use coursedata
db.flashcards.find()
db.notes.find()
db.notes.insertOne({question: 'this is a question', answer: 'this is an answer'})
db.flashcards.insertOne({question: 'this is a question', answer: 'this is an answer'})
db.notes.find()
exit
db.flashcards.insertOne({question: ' ___________ refers to the process by which data is combined to form a single meaningful entity, e.g. average, sum, count, maximum and minimum. Both SQL and NoSQL support this.', answer: ' Aggregation refers to the process by which data is combined to form a single meaningful entity, e.g. average, sum, count, maximum and minimum. Both SQL and NoSQL support this.'})
db.flashcards.insertOne({question: ' ______ databases are better for multi-row transactions, whereas ______ databases are better for unstructured data like documents or JSON. (Multi-row transactions are where many rows/records of data either all change or none of them change.)', answer: ' SQL databases use structured query language and have a predefined schema. NoSQL databases have dynamic schemas for unstructured data.'})
db.flashcards.insertOne({question: ' Why did MongoDB create BSON?', answer: ' MongoDB created Binary JSON format (BSON) to increase efficiency and support more data types. With BSON data can be searched and indexed with greater performance.'})
db.flashcards.insertOne({question: ' Who developed Node.js and when?', answer: ' Ryan Dahl created Node in 2009.
More Infos: Ryan Dahl Wikipedia, listen to Ryan Dahl's 2018 "What I regret about Node" talk'})
db.flashcards.insertOne({question: ' What size projects are SQL and NoSQL used for?', answer: ' SQL and NoSQL are used for both large and small projects.'})
db.flashcards.insertOne({question: ' What language does Node run natively?', answer: ' The only language which Node runs natively is JavaScript. However in 2018, Ryan Dahl created another project called Deno which also runs TypeScript natively. Node is written in C++, Deno is written in Rust.
More Infos: get started with the Deno project, learn Rust, learn TypeScript'})
db.flashcards.insertOne({question: ' What is the de facto standard web-server framework for Node.js?', answer: ' The de facto standard web-server framework for Node.js is Express which was created in 2010, one year after Node.'})
db.flashcards.insertOne({question: ' What four tasks can middleware functions perform?', answer: ' Middleware functions can (1) execute any code, (2) call the next middleware in the stack, (3) make changes to the request and the response objects, (4) end the request-response cycle.'})
db.flashcards.insertOne({question: ' What does SQL stand for?', answer: ' SQL stands for Structured Query Language.'})
db.flashcards.insertOne({question: ' What does REST stand for?', answer: ' REST stands for Representational State Transfer.'})
db.flashcards.insertOne({question: ' What does Node use to prevent blocking code?', answer: ' Node.js prevents blocking code by using callbacks.'})
db.flashcards.insertOne({question: ' What does CRUD stand for?', answer: ' CRUD stands for create, read, update and delete. These are the core tasks that a database performs with data.'})
db.flashcards.insertOne({question: ' What does BSON stand for?', answer: ' BSON stands for Binary JSON format.'})
db.flashcards.insertOne({question: ' What command would you use to clone the Heroku application "edward-bookseller" locally?', answer: ' heroku git:clone -a edward-bookseller'})
db.flashcards.insertOne({question: ' What are two commands you can use to install Express in your application?', answer: ' Two commands that you can use to install Express in your application are npm install express and yarn add express.'})
db.flashcards.insertOne({question: ' What are the most-commonly-used HTTP verbs/methods?', answer: ' The most-commonly-used HTTP verbs/methods are: POST (to add new data items), GET (to retrieve data), PUT (to update a data time, e.g. replace it with a new one), PATCH (change part of a data item, e.g. change a field's value), and DELETE (removes a data item from the data store).'})
db.flashcards.insertOne({question: ' What are four types of stores a NoSQL database can have?', answer: ' A NoSQL database can have document, key-value, graph or wide-column stores. (A wide-column store uses tables, rows, and columns, but unlike a relational database, the names and format of the columns can vary from row to row in the same table.) Another type of NoSQL storage solution are search databases such as Elasticsearch, which is a storage solution to perform fast searching on large amounts of data.'})
db.flashcards.insertOne({question: ' What JavaScript engine does Node use?', answer: ' Node uses the JavaScript engine called the V8 engine.'})
db.flashcards.insertOne({question: ' The two markup languages that can be used in RESTful APIs are _______ and ______.', answer: ' The two markup languages that can be used in RESTful APIs are JSON and XML.'})
db.flashcards.insertOne({question: ' SQL databases use _________ query language and have a predefined schema. NoSQL databases have _________ schemas for unstructured data.', answer: ' SQL databases use structured query language and have a predefined schema. NoSQL databases have dynamic schemas for unstructured data.'})
db.flashcards.insertOne({question: ' PostgreSQL, SQL Server, MySQL, MariaDB, and SQLite are all ______ databases. MongoDB, CouchDB, Cassandra, and Redis are all ______ databases.', answer: ' PostgreSQL, SQL Server, MySQL, MariaDB, and SQLite are all SQL databases. MongoDB, CouchDB, Cassandra, and Redis are all NoSQL databases.'})
db.flashcards.insertOne({question: ' On which provider services can you deploy a Node/Express backend app?', answer: ' You can deploy a Node/Express backend app on Heroku, Vercel and a Virtual Private Server (VPS) such as DigitalOcean. GitHub Pages and Netlify do not support deploying Node/Express apps as such.'})
db.flashcards.insertOne({question: ' Node is asynchronous and _______-driven.', answer: ' 'Node is asynchronous and event-driven. The simplest form of the event-driven nature is the callback style of some of the popular Node.js functions â€” for example, fs.readFile, where you tell Node to read a file, passing it a callback function which you can execute when it indicates that it is finished reading the file and has all the data from the file. In this sense, the code in your callback function responds to the event of Node being finished reading the file.})
db.flashcards.insertOne({question: ' Node enables you to build backend applications that are _____ and _____.', answer: ' Node enables you to build backend applications that are fast and scalable. One characteristic that makes Node so fast is that it is non-blocking, i.e. it can run many tasks at the same time using callbacks as events which execute when certain functions are complete. Node is scalable due to the same reason: essentially you can have multiple jobs being processed at the same time and Node can handle the load with no significant burden.'})
db.flashcards.insertOne({question: ' Name two kinds of applications that Express is used to build?', answer: ' Two kinds of applications that Express is used to build are web and mobile applications.'})
db.flashcards.insertOne({question: ' Name two characteristics that describe the Express web application framework.', answer: ' Two characteristics that describe the Express web application framework are minimal and flexible. It is minimal because you can create a web-server in Express with 10 lines of code or less. It is flexible because it is unopinionated, i.e. it doesn't have strong prescriptions or conventions on how to use it.'})
db.flashcards.insertOne({question: ' MongoDB is a document based database that supports querying and indexing, and is known for its __________ and ___________.', answer: ' MongoDB is a document based database that supports querying and indexing, and is known for its scalability and flexibility.'})
db.flashcards.insertOne({question: ' MongoDB is ________ oriented while SQL is _________ oriented.', answer: ' MongoDB is document oriented while SQL is table oriented.'})
db.flashcards.insertOne({question: ' Is Node a synchronous or asynchronous platform?', answer: ' Node. js uses callbacks and thus is an asynchronous platform which does not wait around like database queries or file I/O to complete. The callback function is called at the completion of a given task which prevents blocking and allows other code to be run in the meantime.'})
db.flashcards.insertOne({question: ' Express functions have access to what two objects and what function which allow you to develop middleware applications such as website backends and APIs?', answer: ' Express functions have access to the request (req) and response (res) objects as well as the next function which are a essential component of middleware applications.'})
db.flashcards.insertOne({question: ' Does Node run multithreaded or singlethreaded?', answer: ' While Node.js itself can be considered multithreaded, i.e. I/O and other such operations run from a thread pool, JavaScript code executed by Node.js runs in a single thread. This isn't a limitation of Node.js itself, but of the V8 JavaScript engine and of JavaScript implementations generally.'})
db.flashcards.insertOne({question: ' Does Node execute JavaScript inside or outside a web browser?', answer: ' Node executes JavaScript outside a web browser. Node uses JavaScript on the backend while browsers use JavaScript on the frontend. This enables developers to use one language on the entire technology stack.'})
db.flashcards.insertOne({question: ' By saying that NoSQL databases are schemaless, this means that they have _______ schemas, not _______ schemas like SQL databases.', answer: ' By saying that NoSQL databases are schemaless, this means that they have dynamic schemas, not static schemas like SQL databases. Dynamic schemas are for unstructured data where data is stored in many ways. Static schemas store data in rigid tables where each row has the same number and kind of fields.'})
db.flashcards.insertOne({question: ' As a NoSQL database, MongoDB is considered ________ because it does not require a rigid, pre-defined schema like a relational database.', answer: ' 
As a NoSQL database, MongoDB is considered schemaless because it does not require a rigid, pre-defined schema like a relational database.'})
db.flashcards.insertOne({question: ' A relational database (SQL) stores information in ___________ form, whereas a non-relational database (NoSQL) stores information in ___________ form.', answer: ' A relational database (SQL) stores information in tabular form (in the form of a table of data), whereas a non-relational database (NoSQL) stores information in non-tabular form.'})


